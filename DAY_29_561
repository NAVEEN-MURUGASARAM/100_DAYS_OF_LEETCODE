void merge(int *nums,int lb,int mid,int ub);
void mergesort(int * nums,int lb,int ub)
{
    if(lb<ub)
    {
        int mid=(lb + ub)/2;
        mergesort(nums,lb,mid);
        mergesort(nums,mid+1,ub);
        merge(nums,lb,mid,ub);
    }
}
void merge(int *nums,int lb,int mid,int ub)
{
    int n1=mid-lb+1,n2=ub-mid;
    int l[n1];
    int r[n2];
    for(int i=0;i<n1;i++)
    {
        l[i]=nums[lb+i];
    }
    for(int j=0;j<n2;j++)
    {
        r[j]=nums[mid+1+j];
    }
    int i=0,j=0,k=lb;
    while(i<n1 && j<n2)
    {
        if(l[i] < r[j])
        {
            nums[k]=l[i];
            i++;
        }
        else
        {
            nums[k]=r[j];
            j++;
        }
        k++;
    }
    while(i<n1)
    {
        nums[k]=l[i];
        i++;
        k++;
    }
    while(j<n2)
    {
        nums[k]=r[j];
        j++;
        k++;
    }
}
int arrayPairSum(int* nums, int numsSize) {
    int sum=0;
    mergesort(nums, 0,numsSize-1);
    for(int i=0;i<numsSize;i+=2)
    {
        sum+=nums[i];       
    }
return sum;  
}
