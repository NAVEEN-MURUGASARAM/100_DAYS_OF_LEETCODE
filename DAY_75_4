double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) {
    int len=nums1Size+nums2Size;
    int * merged=(int *) malloc(sizeof(int) *len);
    int i=0,j=0,index=0;
    double median=0;
    while(i<nums1Size && j<nums2Size)
    {
        if(nums1[i]<=nums2[j])
        {
            merged[index++]=nums1[i];
            i++;
        }
        else
        {
            merged[index++]=nums2[j];
            j++;
        }
    }
    while(i<nums1Size)
    {
        merged[index++]=nums1[i];
        i++;
    }
    while(j<nums2Size)
    {
        merged[index++]=nums2[j];
        j++;
    }
    if(len%2==0)
    {
        median=(merged[len/2]+merged[(len/2)-1])/2.0;
    }
    else
    {
        median=merged[len/2];
    }
    return median;
}
